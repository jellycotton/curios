✅ プロジェクトの主目的
Google Fact Check Tools API を活用した「掲示板やニュースサイトへの書き込み」のファクトチェック機能の開発
- ユーザーが投稿の真偽を簡単にチェックできるツールを作成
- 検索機能を組み込み、情報を入力するとファクトチェックデータを取得
- Google Fact Check API との接続を確立し、データを正しく表示
- 情報の透明性を高めるウェブアプリとして機能
- ニュース記事だけでなく、掲示板やSNSの書き込みにも対応


✅ これまでの進捗
- Gitリポジトリの初期化（git init 実施、.gitignore 設定）
- 認証情報の整理（credentials.json, .env）→ config/ に移動
- APIキー・OAuth 2.0 認証情報の確認と適用
- Git管理の適切な設定（config/ や secrets/ をGit管理対象外に）
- フロントエンド（public/）とAPI処理（src/）の基本構成を準備
- ファイルの整理と安全な運用を開始


✅ 今後の予定
1. APIリクエストの動作確認
   - fetchTest.js を実行し、Google Fact Check API からデータ取得できるか確認
   - 掲示板・ニュースサイトの「投稿」に関する情報も検索できるかチェック
   - 実行コマンド: node fetchTest.js

2. フロントエンドとの接続
   - app.js を編集し、検索フォームから特定の投稿に関する検証結果を取得できるようにする

3. データの表示処理
   - 取得したファクトチェックデータを index.html に表示
   - ユーザーが投稿の信頼性を簡単に判断できるように改善

4. エラー処理の追加
   - 検索結果がない場合 → 「この投稿に関するファクトチェック情報はありません」と表示
   - APIリクエストが失敗した場合 → ユーザーに適切なエラーメッセージを出す


✅ 社名: Veritas社  
✅ ブランド名: Veritas  
✅ プログラム名: Veritas Lens  
✅ 最重要機能: 画面長押しによるその場でAIが書き込みなどのファクトチェックを実行  

📌 「Veritas Lens」の核となる機能:  
✔ ユーザーが画面を長押しすると、AIがリアルタイムで書き込みのファクトチェックを開始  
✔ 情報の信頼性を素早く確認できるツールとして機能  
✔ Google Fact Check Tools APIと連携し、正確な情報を提供  

これが Veritas Lens の基盤になる！


  プロジェクト「Veritas Lens」進捗メモ

  日付: 2025年6月27日


  [1] プロジェクト概要
   * 名称: Veritas Lens
   * 目的: AIを活用したリアルタイム・ファクトチェックツールの開発。最終的に特許取得を目指す。
   * 核心機能: 画面長押しで、表示されているテキストのファクトチェックを実行する。


  [2] ここまでの達成状況
   * 技術選定: 当初検討した Google Fact Check Tools API はデータベース検索型であったため、リアルタイム分析が可能な Google
     Gemini API へと方針転換し、採用を決定した。
   * バックエンド構築 (src/server.js):
       * Node.jsとExpressによるAPIサーバーを構築済み。
       * Gemini APIへの接続を確立し、.env ファイルからAPIキーを安全に読み込む設定が完了。
       * 「評価」「解説」「根拠」を返すように指示する、効果的なプロンプトを設計・実装済み。
   * フロントエンド構築 (public/):
       * ユーザーがテキストを入力し、結果を表示するための基本的なUI（HTML/CSS/JS）を構築済み。
       * バックエンドと正常に通信し、Gemini APIからのファクトチェック結果を表示できることを確認済み。
   * 動作確認:
       * 「日本の総理大臣はドナルド・トランプである」というテストクエリに対し、Gemini APIが「誤り」と正しく判定し、根拠
         と共に結果を返すことを確認。核心となるファクトチェック機能は正常に動作している。



  [3] 次のステップ（選択肢）
   1. UI/UXの改善:
       * 結果を待っている間のローディング表示の実装。
       * 評価（「誤り」など）に応じて結果の表示スタイル（色など）を変更。
   2. 核心機能「長押し」の実装:
       * フロントエンドで長押しイベントを検知するロジックの追加。
   3. その他:
       * エラーハンドリングの強化。

  ---OK